%% coding: utf-8
%% RUNTIME_CONFIG=false
[{esbuild,[{version,<<48,46,49,55,46,49,49>>},{testapp,[{args,[<<106,115,47,97,112,112,46,106,115>>,<<45,45,98,117,110,100,108,101>>,<<45,45,116,97,114,103,101,116,61,101,115,50,48,49,55>>,<<45,45,111,117,116,100,105,114,61,46,46,47,112,114,105,118,47,115,116,97,116,105,99,47,97,115,115,101,116,115>>,<<45,45,101,120,116,101,114,110,97,108,58,47,102,111,110,116,115,47,42>>,<<45,45,101,120,116,101,114,110,97,108,58,47,105,109,97,103,101,115,47,42>>]},{cd,<<47,104,111,109,101,47,114,117,110,110,101,114,47,119,111,114,107,47,99,97,108,111,114,105,47,99,97,108,111,114,105,47,97,115,115,101,116,115>>},{env,#{<<78,79,68,69,95,80,65,84,72>> => <<47,104,111,109,101,47,114,117,110,110,101,114,47,119,111,114,107,47,99,97,108,111,114,105,47,99,97,108,111,114,105,47,100,101,112,115>>}}]}]},{tailwind,[{version,<<51,46,52,46,48>>},{testapp,[{args,[<<45,45,99,111,110,102,105,103,61,116,97,105,108,119,105,110,100,46,99,111,110,102,105,103,46,106,115>>,<<45,45,105,110,112,117,116,61,99,115,115,47,97,112,112,46,99,115,115>>,<<45,45,111,117,116,112,117,116,61,46,46,47,112,114,105,118,47,115,116,97,116,105,99,47,97,115,115,101,116,115,47,97,112,112,46,99,115,115>>]},{cd,<<47,104,111,109,101,47,114,117,110,110,101,114,47,119,111,114,107,47,99,97,108,111,114,105,47,99,97,108,111,114,105,47,97,115,115,101,116,115>>}]}]},{phoenix,[{json_library,'Elixir.Jason'}]},{testapp,[{generators,[{timestamp_type,utc_datetime}]},{'Elixir.Testapp.Mailer',[{adapter,'Elixir.Swoosh.Adapters.Local'}]},{'Elixir.TestappWeb.Endpoint',[{url,[{host,<<108,111,99,97,108,104,111,115,116>>}]},{adapter,'Elixir.Bandit.PhoenixAdapter'},{render_errors,[{formats,[{html,'Elixir.TestappWeb.ErrorHTML'},{json,'Elixir.TestappWeb.ErrorJSON'}]},{layout,false}]},{pubsub_server,'Elixir.Testapp.PubSub'},{live_view,[{signing_salt,<<54,116,71,86,67,101,115,120>>}]},{live_reload,[{patterns,[#{re_pattern => {re_pattern,1,0,0,<<69,82,67,80,166,0,0,0,0,0,0,0,81,0,0,0,255,255,255,255,255,255,255,255,112,0,47,0,0,0,1,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,98,29,112,29,114,29,105,29,118,29,47,29,115,29,116,29,97,29,116,29,105,29,99,29,47,85,12,133,0,9,0,1,29,106,29,115,119,0,9,29,99,29,115,29,115,119,0,9,29,112,29,110,29,103,119,0,11,29,106,29,112,29,101,29,103,119,0,9,29,106,29,112,29,103,119,0,9,29,103,29,105,29,102,119,0,9,29,115,29,118,29,103,120,0,65,25,120,0,98,0>>},opts => <<>>,source => <<112,114,105,118,47,115,116,97,116,105,99,47,46,42,40,106,115,124,99,115,115,124,112,110,103,124,106,112,101,103,124,106,112,103,124,103,105,102,124,115,118,103,41,36>>,'__struct__' => 'Elixir.Regex',re_version => {<<56,46,52,52,32,50,48,50,48,45,48,50,45,49,50>>,little}},#{re_pattern => {re_pattern,1,0,0,<<69,82,67,80,112,0,0,0,0,0,0,0,81,0,0,0,255,255,255,255,255,255,255,255,112,0,111,0,0,0,1,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,44,29,112,29,114,29,105,29,118,29,47,29,103,29,101,29,116,29,116,29,101,29,120,29,116,29,47,85,12,133,0,9,0,1,29,112,29,111,120,0,9,25,120,0,44,0>>},opts => <<>>,source => <<112,114,105,118,47,103,101,116,116,101,120,116,47,46,42,40,112,111,41,36>>,'__struct__' => 'Elixir.Regex',re_version => {<<56,46,52,52,32,50,48,50,48,45,48,50,45,49,50>>,little}}]}]}]}]},{swoosh,[{api_client,'Elixir.Swoosh.ApiClient.Finch'},{finch_name,'Elixir.Testapp.Finch'},{local,false}]},{logger,[{console,[{format,<<36,116,105,109,101,32,36,109,101,116,97,100,97,116,97,91,36,108,101,118,101,108,93,32,36,109,101,115,115,97,103,101,10>>},{metadata,[request_id,module,function,pid]}]},{level,info}]},{elixir,[{config_provider_init,#{'__struct__' => 'Elixir.Config.Provider',config_path => {system,<<82,69,76,69,65,83,69,95,83,89,83,95,67,79,78,70,73,71>>,<<46,99,111,110,102,105,103>>},reboot_system_after_config => false,extra_config => [],prune_runtime_sys_config_after_boot => false,providers => [{'Elixir.Config.Reader',{{system,<<82,69,76,69,65,83,69,95,82,79,79,84>>,<<47,114,101,108,101,97,115,101,115,47,48,46,49,46,48,45,50,53,57,53,51,97,49,47,114,117,110,116,105,109,101,46,101,120,115>>},[{env,prod},{target,host},{imports,disabled}]}},{'Elixir.Testapp.ConfigProvider.Secrets.Manager',[]}],validate_compile_env => [{testapp,['Elixir.TestappWeb.Gettext'],error},{testapp,[dev_routes],error},{plug,[mimes],error},{plug,[statuses],error},{phoenix_live_view,[enable_expensive_runtime_checks],error},{mime,[extensions],error},{mime,[suffixes],error},{mime,[types],error}]}}]}].
