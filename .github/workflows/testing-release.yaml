name: Publishing Testing Releases

on:
  push:
    tags:
      - "*"

env:
  MIX_ENV: prod
  SHELL: /usr/bin/bash
  UBUNTU_2404_OTP_27_NAME: deployex-ubuntu-24.04-otp-27.tar.gz
  UBUNTU_2404_OTP_28_NAME: deployex-ubuntu-24.04-otp-28.tar.gz

jobs:
  buildUbuntu2404Otp27:
    if: github.event.base_ref != 'refs/heads/main'
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Install libcap-dev [recommended by erlexec]
        run: sudo apt-get install libcap-dev -y

      - name: Copy .tool-versions
        run: cp devops/releases/otp-27/.tool-versions .

      - name: Setup BEAM
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Install Elixir dependencies
        run: mix do deps.get, compile --warnings-as-errors

      - name: Assets Deploy
        run: mix assets.deploy

      - name: Compile and Generate a Release
        run: mix release

      - name: Rename Artifact
        run: mv _build/prod/*.tar.gz ${{ env.UBUNTU_2404_OTP_27_NAME }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UBUNTU_2404_OTP_27_NAME }}
          path: .

  buildUbuntu2404Otp28:
    if: github.event.base_ref != 'refs/heads/main'
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Install libcap-dev [recommended by erlexec]
        run: sudo apt-get install libcap-dev -y

      - name: Copy .tool-versions
        run: cp devops/releases/otp-28/.tool-versions .

      - name: Setup BEAM
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Install Elixir dependencies
        run: mix do deps.get, compile --warnings-as-errors

      - name: Assets Deploy
        run: mix assets.deploy

      - name: Compile and Generate a Release
        run: mix release

      - name: Rename Artifact
        run: mv _build/prod/*.tar.gz ${{ env.UBUNTU_2404_OTP_28_NAME }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UBUNTU_2404_OTP_28_NAME }}
          path: .

  copyInstaller:
    if: github.event.base_ref != 'refs/heads/main'
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Move installer to root
        run: mv devops/installer/deployex.sh deployex.sh

      - uses: actions/upload-artifact@v4
        with:
          name: deployex.sh
          path: .

  upload_aws:
    if: github.event.base_ref != 'refs/heads/main'
    name: Upload files to AWS environment
    needs:
      [
        buildUbuntu2404Otp26,
        buildUbuntu2404Otp27,
        buildUbuntu2404Otp28,
        copyInstaller,
      ]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Download ${{ env.UBUNTU_2404_OTP_27_NAME }} artefact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.UBUNTU_2404_OTP_27_NAME }}
          path: .

      - name: Upload ${{ env.UBUNTU_2404_OTP_27_NAME }} artefact
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: "sa-east-1"
          source: ${{ env.UBUNTU_2404_OTP_27_NAME }}
          dest: "s3://${{ secrets.CLOUD_TEST_STORAGE}}"

      - name: Download ${{ env.UBUNTU_2404_OTP_28_NAME }} artefact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.UBUNTU_2404_OTP_28_NAME }}
          path: .

      - name: Upload ${{ env.UBUNTU_2404_OTP_28_NAME }} artefact
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: "sa-east-1"
          source: ${{ env.UBUNTU_2404_OTP_28_NAME }}
          dest: "s3://${{ secrets.CLOUD_TEST_STORAGE}}"

      - name: Download installer artefact
        uses: actions/download-artifact@v4
        with:
          name: deployex.sh
          path: .

      - name: Upload installer artefact
        uses: prewk/s3-cp-action@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: "sa-east-1"
          source: "deployex.sh"
          dest: "s3://${{ secrets.CLOUD_TEST_STORAGE}}"
